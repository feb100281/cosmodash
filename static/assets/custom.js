document.addEventListener("DOMContentLoaded", function () {


 



    //  –∏–∫–æ–Ω–∫–∏ –¥–ª—è AG GRID
    window.dashAgGridComponentFunctions = window.dashAgGridComponentFunctions || {};

    window.dashAgGridComponentFunctions.officeIconRenderer = function (props) {
        const value = props.value;
        if (value === "–û—Ñ–∏—Å") {
            return "üè¢ " + value;
        } else if (value === "–¢–æ—Ä–≥–æ–≤–ª—è") {
            return "üõçÔ∏è " + value;
        } else if (value === "–ü–∞—Ä–∫–æ–≤–∫–∞") {
            return "üöó " + value;
        } else if (value === "–°–∫–ª–∞–¥") {
            return "üì¶ " + value;
        }
        else if (value === "–°–ø–µ—Ü–ø—Ä–æ–µ–∫—Ç") {
            return "üß© " + value;
        } else if (value === "–¢–µ–ª–µ–∫–æ–º—É–Ω–∏–∫–∞—Ü–∏–∏") {
            return "üì° " + value;
        } else if (value === "–†–µ–∫–ª–∞–º–∞") {
            return "üì¢ " + value;
        }
        return value;
    };






    // –ê–Ω–∏–º–∞—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
    const logo = document.getElementById("logo-img");
    if (logo) {
        logo.addEventListener("click", function () {
            logo.classList.add("rotating");
            setTimeout(() => logo.classList.remove("rotating"), 600);
        });
    }

    // –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ä–∞–∑—É
console.log("‚úÖ custom.js –ø–æ–¥–∫–ª—é—á–µ–Ω!");

// –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫–∏ –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
const intervalId = setInterval(function() {
    const button1 = document.getElementById('download_chart_btn');
    const chart1 = document.getElementById('rra_area_chart_container');

    const button2 = document.getElementById('download_button_wf');
    const chart2 = document.getElementById('rrca_wf_chart');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
    if (button1 && chart1 && button2 && chart2) {
        console.log("‚úÖ –û–±–µ –∫–Ω–æ–ø–∫–∏ –∏ –æ–±–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω—ã!");

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏
        button1.addEventListener('click', function() {
            console.log("–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ 1!");

            html2canvas(chart1, {
                backgroundColor: "#ffffff",
                scale: 5
            }).then(canvas => {
                const link = document.createElement('a');
                link.download = '–ê–Ω–∞–ª–∏–∑ –∞—Ä–µ–Ω–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è.png';
                link.href = canvas.toDataURL('image/png');
                link.click();
            });
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∫–Ω–æ–ø–∫–∏
        button2.addEventListener('click', function() {
            console.log("–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ 2!");

            html2canvas(chart2, {
                backgroundColor: "#ffffff",
                scale: 5
            }).then(canvas => {
                const link = document.createElement('a');
                link.download = '–ê–Ω–∞–ª–∏–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—Ä–µ–Ω–¥–Ω–æ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è.png';
                link.href = canvas.toDataURL('image/png');
                link.click();
            });
        });

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        clearInterval(intervalId);
    }
}, 500); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 500 –º—Å




    // dmc —Ñ—É–Ω–∫—Ü–∏–∏
    var dmcfuncs = window.dashMantineFunctions = window.dashMantineFunctions || {};

    dmcfuncs.formatNumberIntl = function(value) {
    if (value == null || isNaN(value)) return "‚ÇΩ0";
    const absValue = Math.abs(value);
    let formatted;
    if (absValue >= 1_000_000) {
        formatted = "‚ÇΩ" + (absValue / 1_000_000).toFixed(1).replace(".", ",") + " –º–ª–Ω";
    } else {
        formatted = "‚ÇΩ" + (absValue / 1_000).toFixed(0).replace(".", ",") + " —Ç—ã—Å";
    }
    if (value < 0) {
        formatted = "-" + formatted;
    }
    return formatted;
};


//     dmcfuncs.formatQuant = function(value) {
//     if (value == null || isNaN(value)) return "0 –º¬≤";
//     const absValue = Math.abs(value);
//     let formatted;
//     if (absValue >= 1000) {
//         formatted = (absValue / 1000).toFixed(1).replace(".", ",") + " —Ç—ã—Å –º¬≤";
//     } else {
//         formatted = absValue.toFixed(0) + " –º¬≤";
//     }
//     if (value < 0) {
//         formatted = "-" + formatted;
//     }
//     return formatted;
// };


    dmcfuncs.formatQuant = function (value) {
    const NNBSP = '\u202F'; // —É–∑–∫–∏–π –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–π –ø—Ä–æ–±–µ–ª
    if (value == null || isNaN(value)) return '0' + NNBSP + '–º¬≤';

    const abs = Math.abs(value);
    const sign = value < 0 ? '‚àí' : ''; // —Ç–∏–ø–æ–≥—Ä–∞—Ñ—Å–∫–∏–π –º–∏–Ω—É—Å

    const nf0 = new Intl.NumberFormat('ru-RU', { maximumFractionDigits: 0 });
    const nf1 = new Intl.NumberFormat('ru-RU', { minimumFractionDigits: 1, maximumFractionDigits: 1 });

    if (abs >= 1000) {
        // –ø—Ä–∏–º–µ—Ä: 1,2 —Ç—ã—Å –º¬≤
        return sign + nf1.format(abs / 1000) + NNBSP + '—Ç—ã—Å' + NNBSP + '–º¬≤';
    } else {
        // –ø—Ä–∏–º–µ—Ä: 950 –º¬≤ (–≤–Ω—É—Ç—Ä–∏ —á–∏—Å–ª–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Ç—ã—Å—è—á ‚Äî –Ω–µ—Ä–∞–∑—Ä—ã–≤–Ω—ã–π –ø—Ä–æ–±–µ–ª)
        return sign + nf0.format(abs) + NNBSP + '–º¬≤';
    }
    };



    dmcfuncs.formatPercentIntl = function(value) {
        if (value == null || isNaN(value)) return "0 %";
        if (Math.abs(value) < 0.1) {
            return "<0,1 %";
        }
        return value.toFixed(1).replace(".", ",") + " %";
    };

    dmcfuncs.formatIntl = function(value) {
        if (value == null || isNaN(value)) return "0";
        if (Math.abs(value) < 0.1) {
            return "0";
        }
        return value.toFixed(0).replace(".", ",") + " —à—Ç";
    };

    window.dashMantineFunctions.formatRubles = (value) => {
        return '‚ÇΩ' + (value / 1000000).toFixed(1) + ' –º–ª–Ω';
    };

    dmcfuncs.formatRublesMillions = function(value) {
        console.log("–ü–æ–ª—É—á–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ:", value);
        if (value == null || isNaN(value)) return "‚ÇΩ0 –º–ª–Ω";
        return "‚ÇΩ" + (value / 1_000_000).toFixed(1).replace(".", ",") + " –º–ª–Ω";
    };
    // console.log("–§—É–Ω–∫—Ü–∏—è formatRublesMillions –∑–∞–≥—Ä—É–∂–µ–Ω–∞:", dmcfuncs.formatRublesMillions);

    dmcfuncs.formatMonthLabel = function(value, { monthDict }) {
        return monthDict[value] || value;
    };


    dmcfuncs.formatARPU = function(value) {
    if (value == null || isNaN(value)) return "‚ÇΩ0";
    const absValue = Math.abs(value);
    let formatted;
    if (absValue >= 1_000_000) {
        formatted = "‚ÇΩ" + (absValue / 1_000_000)
            .toFixed(1)
            .replace(".", ",") + " –º–ª–Ω / –º¬≤";
    } else {
        formatted = "‚ÇΩ" + absValue
            .toFixed(0)
            .toString()
            .replace(/\B(?=(\d{3})+(?!\d))/g, " ");  // –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –¥–ª—è —Ç—ã—Å—è—á
    }
    if (value < 0) {
        formatted = "-" + formatted;
    }
    return formatted;
};

    

//     dmcfuncs.formatARPU = function(value) {
//     if (value == null || isNaN(value)) return "‚ÇΩ0";
//     const absValue = Math.abs(value);
//     let formatted;
//     if (absValue >= 1_000_000) {
//         formatted = "‚ÇΩ" + (absValue / 1_000_000).toFixed(1).replace(".", ",") + " –º–ª–Ω / –º2";
//     } else {
//         formatted = "‚ÇΩ" + (absValue).toFixed(0).replace(".", ",");
//     }
//     if (value < 0) {
//         formatted = "-" + formatted;
//     }
//     return formatted;
// };
});


// === Dash AG Grid functions (–ì–õ–û–ë–ê–õ–¨–ù–û) ===
window.dashAgGridFunctions = window.dashAgGridFunctions || {};

// —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä –¥–ª—è –∫–æ–ª–æ–Ω–∫–∏ "–û—Å—Ç–∞–ª–æ—Å—å_–¥–Ω–µ–π"
window.dashAgGridFunctions.daysFormatter = function (params) {
  var isTotal = (params && params.node && params.node.footer) ||
                (params && params.data && params.data.–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä === '–ò–¢–û–ì–û');
  var v = Number(params && params.value);
  if (isTotal || !isFinite(v)) return '';
  return Math.round(v) + ' –¥–Ω.';
};

// –ø—Ä–∞–≤–∏–ª–∞ —Ä–∞—Å–∫—Ä–∞—Å–∫–∏ (–±–µ–∑ optional chaining)
window.dashAgGridFunctions.daysIsRed = function (params) {
  var isTotal = (params && params.node && params.node.footer) ||
                (params && params.data && params.data.–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä === '–ò–¢–û–ì–û');
  if (isTotal) return false;
  var v = Number(params && params.value);
  return isFinite(v) && v <= 30;
};
window.dashAgGridFunctions.daysIsOrange = function (params) {
  var isTotal = (params && params.node && params.node.footer) ||
                (params && params.data && params.data.–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä === '–ò–¢–û–ì–û');
  if (isTotal) return false;
  var v = Number(params && params.value);
  return isFinite(v) && v > 30 && v <= 90;
};
window.dashAgGridFunctions.daysIsGreen = function (params) {
  var isTotal = (params && params.node && params.node.footer) ||
                (params && params.data && params.data.–ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä === '–ò–¢–û–ì–û');
  if (isTotal) return false;
  var v = Number(params && params.value);
  return isFinite(v) && v > 90;
};
